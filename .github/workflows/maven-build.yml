# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "develop", "feature/**" ]
    tags-ignore: ["v1."]
  pull_request:
    branches: [ "main", "develop", "feature/**" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Check out Git repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up environment with Java and Maven
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # Set up dependency cache
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build & Test
      - name: Build & Test with Maven
        run: mvn -T 1C -B -U clean install

#      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#      - name: Update dependency graph
#        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6